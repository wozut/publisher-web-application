#!/bin/bash

# Pre-push hook that runs quality checks only when pushing to main branch

protected_branch='main'
current_branch=$(git rev-parse --abbrev-ref HEAD)

# Only run checks if pushing to main branch
if [ "$current_branch" = "$protected_branch" ]; then
    echo "🔍 Running pre-push checks for main branch..."

    # Check if branch is up-to-date with remote
    echo "🌐 Checking if branch is up-to-date with remote..."
    git fetch origin "$protected_branch" --quiet

    # Check if there are commits on remote that we don't have locally
    behind_count=$(git rev-list --count HEAD..origin/"$protected_branch")

    if [ "$behind_count" -gt 0 ]; then
        echo "❌ Branch is $behind_count commit(s) behind origin/$protected_branch. Please pull latest changes first."
        exit 1
    fi
    echo "✅ Branch is up-to-date with remote"

    # Run build
    echo "🔨 Building application..."
    if ! npm run build; then
        echo "❌ Build failed. Please fix build errors before pushing."
        exit 1
    fi
    echo "✅ Build successful"
    
#    # Run database migrations
#    echo "🗄️  Running database migrations..."
#    if ! npx prisma migrate deploy; then
#        echo "❌ Database migration failed. Please check your migrations."
#        exit 1
#    fi
#    echo "✅ Database migrations successful"
    
    # Run tests
    echo "🧪 Running tests..."
    if ! npm run test; then
        echo "❌ Tests failed. Please fix failing tests before pushing."
        exit 1
    fi
    echo "✅ All tests passed"

#    # Run format check
#    echo "📋 Checking code formatting..."
#    if ! npm run format:check; then
#        echo "❌ Code formatting check failed. Run 'npm run format' to fix."
#        exit 1
#    fi
#    echo "✅ Code formatting check passed"
    
    echo "🎉 All pre-push checks passed! Push to main allowed."
else
    echo "ℹ️  Skipping pre-push checks (not pushing to main branch)"
fi